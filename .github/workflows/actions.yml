name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: shuelzin/helloworld-page:latest

  deploy:

    needs: build

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

    - name: Install Docker if not present
      run: |
        if ! command -v docker &> /dev/null
        then
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce
        fi

    - name: Install Docker on VM if not present
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VM_NAME_IP }} '
          if ! command -v docker &> /dev/null
          then
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt-get update
            sudo apt-get install -y docker-ce
          fi
        '
    # - name: Add user to docker group on VM
    #   run: |
    #     ssh -o StrictHostKeyChecking=no ${{ secrets.VM_NAME_IP }} 'sudo usermod -aG docker $USER'

    - name: Deploy to VM
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VM_NAME_IP }} 'docker stop ascan-helloworld || true && docker rm ascan-helloworld || true'
        ssh -o StrictHostKeyChecking=no ${{ secrets.VM_NAME_IP }} 'docker pull shuelzin/helloworld-page:latest && docker run -d -p 80:80 --restart=always --name ascan-helloworld shuelzin/helloworld-page:latest'
    
    - name: Run nginx-prometheus-exporter on VM
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VM_NAME_IP }} 'docker stop nginx-exporter || true && docker rm nginx-exporter || true'
        ssh -o StrictHostKeyChecking=no ${{ secrets.VM_NAME_IP }} 'docker pull nginx/nginx-prometheus-exporter:0.8.0 && docker run -d -p 9113:9113 --restart=always --name nginx-exporter nginx/nginx-prometheus-exporter:0.8.0 -nginx.scrape-uri=http://localhost:80/nginx_status'

